<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="auth_account_must_not_be_empty" xml:space="preserve">
    <value>Account must not be empty</value>
  </data>
  <data name="auth_confirm_password_must_not_be_empty" xml:space="preserve">
    <value>Confirm password must not be empty</value>
  </data>
  <data name="auth_email_already_exist" xml:space="preserve">
    <value>This email already exist on our system. Please use another email and try again</value>
  </data>
  <data name="auth_email_is_invalid" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
  <data name="auth_email_must_not_be_empty" xml:space="preserve">
    <value>Email must not be empty</value>
  </data>
  <data name="auth_password_must_not_be_empty" xml:space="preserve">
    <value>Password must not be empty</value>
  </data>
  <data name="auth_phone_already_exist" xml:space="preserve">
    <value>This phone number already exist on our system. Please use another phone number and try again</value>
  </data>
  <data name="auth_phone_is_invalid" xml:space="preserve">
    <value>Phone is invalid</value>
  </data>
  <data name="auth_phone_must_not_be_empty" xml:space="preserve">
    <value>Phone must not be empty</value>
  </data>
  <data name="auth_pwd_n_cpwd_must_same" xml:space="preserve">
    <value>Password and Confirm password must be the same</value>
  </data>
  <data name="auth_refresh_token_must_not_be_empty" xml:space="preserve">
    <value>RefreshToken must not be empty</value>
  </data>
  <data name="auth_sign_in_info_incorrect" xml:space="preserve">
    <value>The account or password you entered is incorrect</value>
  </data>
  <data name="auth_userid_must_not_be_empty" xml:space="preserve">
    <value>UserId must not be empty</value>
  </data>
  <data name="auth_user_already_exist" xml:space="preserve">
    <value>This user name already exist on our system. Please choose another user name and try again</value>
  </data>
  <data name="cloud_bad_request" xml:space="preserve">
    <value>Bad request</value>
  </data>
  <data name="cloud_cannot_move_root_into_node" xml:space="preserve">
    <value>Cannot move root directory into node directory</value>
  </data>
  <data name="cloud_code_must_not_be_empty" xml:space="preserve">
    <value>Code must not be empty</value>
  </data>
  <data name="cloud_destination_dir_is_not_unlocked" xml:space="preserve">
    <value>Destination directory is not unlocked</value>
  </data>
  <data name="cloud_destination_does_not_exist_or_was_deleted" xml:space="preserve">
    <value>Destination does not exist or was deleted</value>
  </data>
  <data name="cloud_destination_id_is_invalid" xml:space="preserve">
    <value>Destination id is not valid</value>
  </data>
  <data name="cloud_directory_already_exist_password" xml:space="preserve">
    <value>This directory already have a password</value>
  </data>
  <data name="cloud_directory_id_is_invalid" xml:space="preserve">
    <value>Directory id is invalid</value>
  </data>
  <data name="cloud_directory_password_is_incorrect" xml:space="preserve">
    <value>Password is not correct</value>
  </data>
  <data name="cloud_file_id_is_invalid" xml:space="preserve">
    <value>File id is invalid</value>
  </data>
  <data name="cloud_move_object_id_is_invalid" xml:space="preserve">
    <value>Id of moving-object is invalid</value>
  </data>
  <data name="cloud_move_object_type_is_invalid" xml:space="preserve">
    <value>Type of moving-object is invalid</value>
  </data>
  <data name="cloud_not_enough_capacity" xml:space="preserve">
    <value>Not enough space to store, {0}MB left</value>
  </data>
  <data name="cloud_over_max_file_size" xml:space="preserve">
    <value>Maximum size for each file is {0}. Please contact the admin if you want to increase the size</value>
  </data>
  <data name="cloud_secret_code_is_incorrect" xml:space="preserve">
    <value>Secret code is not correct</value>
  </data>
  <data name="cloud_upload_failed" xml:space="preserve">
    <value>Upload failed</value>
  </data>
  <data name="common_data_does_not_exist_or_was_deleted" xml:space="preserve">
    <value>This data does not exist or was deleted</value>
  </data>
  <data name="common_list_id_must_not_be_empty" xml:space="preserve">
    <value>List records need remove must not be empty</value>
  </data>
  <data name="common_payload_is_not_valid" xml:space="preserve">
    <value>Request's payload is not valid</value>
  </data>
  <data name="config_language_must_not_be_empty" xml:space="preserve">
    <value>Language must not be empty</value>
  </data>
  <data name="directory_id_is_invalid" xml:space="preserve">
    <value>Directory id is invalid</value>
  </data>
  <data name="directory_name_must_not_be_empty" xml:space="preserve">
    <value>Directory name must not be empty</value>
  </data>
  <data name="directory_not_found" xml:space="preserve">
    <value>Directory not found</value>
  </data>
  <data name="directory_parent_id_is_invalid" xml:space="preserve">
    <value>Parent Id is invalid</value>
  </data>
  <data name="directory_root_dir_does_not_exist" xml:space="preserve">
    <value>Root directory does not exist</value>
  </data>
  <data name="notecategory_name_must_not_be_empty" xml:space="preserve">
    <value>Name must not be empty</value>
  </data>
  <data name="note_background_must_not_be_empty" xml:space="preserve">
    <value>Background color must not be empty</value>
  </data>
  <data name="note_category_id_must_not_be_empty" xml:space="preserve">
    <value>CategoryId must not be empty</value>
  </data>
  <data name="note_category_id_must_not_be_empty_or_invalid" xml:space="preserve">
    <value>CategoryId must not be empty or invalid</value>
  </data>
  <data name="note_content_must_not_be_empty" xml:space="preserve">
    <value>Content must not be empty</value>
  </data>
  <data name="note_order_must_greater_than_0" xml:space="preserve">
    <value>Order must greater than 0</value>
  </data>
  <data name="note_title_must_not_be_empty" xml:space="preserve">
    <value>Title must not be empty</value>
  </data>
  <data name="user_does_not_exists" xml:space="preserve">
    <value>This user does not exists</value>
  </data>
  <data name="user_upload_avatar_failed" xml:space="preserve">
    <value>Upload avatar failed</value>
  </data>
</root>